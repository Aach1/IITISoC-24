# Helper function to process frames of video to replace bg
def process_frame(frame, background_image):
    # Convert frame to tensor and preprocess
    input_tensor = preprocess(frame)
    input_tensor = input_tensor.unsqueeze(0)  # Add batch dimension

    # Run the model
    with torch.no_grad():
        output = replace_model(input_tensor)['out'][0]
    output_predictions = output.argmax(0)

    # Resize mask to match the original frame size
    mask = output_predictions.byte().cpu().numpy()  # converts tensor to np array
    mask = cv2.resize(mask, (frame.shape[1], frame.shape[0]))

    # Create a binary mask for the background and foreground
    mask = (mask == 15).astype(np.uint8)  # Class 15 corresponds to 'person' in COCO dataset

    # Replace the background
    foreground = frame * mask[:, :, np.newaxis]  # multiplies the original frame by the mask to retain only the fg
    background = background_image * (1 - mask[:, :, np.newaxis])  # multiplies the bg image by the inverse of the mask to retain only the bg
    output_frame = foreground + background  # Combines the foreground and background

    return output_frame
